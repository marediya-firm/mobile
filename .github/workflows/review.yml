name: Review Source Code

on:
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: '18.19.0'

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --immutable
      - name: Check for unused dependencies
        run: yarn run depcheck

  tsc-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Compile source code
        run: yarn run tsc --noEmit

  prettier-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --immutable
      - name: Check format of source code
        run: yarn run prettier -c .

  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Lint source code
        run: yarn run eslint -f rdjson -o eslint-report.rdjson.json .
      - name: Post Lint source code
        if: always()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: cat eslint-report.rdjson.json | reviewdog -f=rdjson -diff="git diff FETCH_HEAD" -name=eslint -reporter=github-pr-check

  ktlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup ktlint
        uses: nbadal/action-ktlint-setup@v1
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
      - name: Lint source code
        run: ktlint --reporter=checkstyle "android/**/*.kt" > ktlint-report.checkstyle.xml
      - name: Post Lint source code
        if: always()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: cat ktlint-report.checkstyle.xml | reviewdog -f=checkstyle -diff="git diff FETCH_HEAD" -name=ktlint -reporter=github-pr-check

  swiftlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
      - name: Lint source code
        run: docker run -q -v `pwd`:`pwd` -w `pwd` ghcr.io/realm/swiftlint swiftlint --reporter=checkstyle --output swiftlint-report.checkstyle.xml
      - name: Post Lint source code
        if: always()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: cat swiftlint-report.checkstyle.xml | reviewdog -f=checkstyle -diff="git diff FETCH_HEAD" -name=swiftlint -reporter=github-pr-check

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run test suite
        run: yarn run test --silent --ci --coverage
